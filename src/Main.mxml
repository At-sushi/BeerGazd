<?xml version="1.0" encoding="utf-8"?>
<!--
	BeerGazd
	Copyright (C) 2016 YUTOPER

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
                       xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
    creationComplete="initApp()" mouseDown="if (stage.displayState == flash.display.StageDisplayState.NORMAL) nativeWindow.startMove()"
	doubleClickEnabled="true" doubleClick="toggleFullScreen(null)">
	
	<fx:Script>
		<![CDATA[
import flash.events.Event;
import mx.events.StateChangeEvent;
import mx.events.VideoEvent;
import flash.display.NativeMenu;
import flash.display.NativeMenuItem;
import org.osmf.events.MediaPlayerStateChangeEvent;
import flash.net.*;

			private function initApp():void{
				addEventListener(InvokeEvent.INVOKE, invokeHandler);
				video.autoRewind = false;
				video.addEventListener(MediaPlayerStateChangeEvent.MEDIA_PLAYER_STATE_CHANGE, stateChangeHandler);
				
				initMenu();
			}

			private function invokeHandler(event:InvokeEvent):void{
				LoadBitmapData(event.arguments[0]);
				nativeWindow.title = event.arguments[1];
			}			
	
			private var resultbd:String = null;
	
			public function LoadBitmapData(url:String):void
			{
				if (url == null)
					return;
					
				var loader:URLLoader = new URLLoader();
				loader.addEventListener(Event.COMPLETE, onBLoaded);
				loader.load(new URLRequest(url));	// ロード開始
			}
	
			public function onBLoaded(ev:Event):void
			{
				var loader:URLLoader = URLLoader(ev.target);
				address.text = loader.data;
				
				// ビデオ再生
				video.source = address.text;
				video.play();
				video.videoObject.smoothing = true;
				address.visible = false;
			}

			private function stateChangeHandler(event:MediaPlayerStateChangeEvent):void {
				if (event.state == "Stopped") {
					// リロード
					video.stop();
					video.play();
				}
			}			
			
			private function createMenuItem(name:String, onSelect:Function, onPreparing:Function = null):NativeMenuItem {
				var menuItem:NativeMenuItem = new NativeMenuItem(name);
				
				menuItem.addEventListener(Event.SELECT, onSelect);
				menuItem.addEventListener(Event.PREPARING, onPreparing);
				return menuItem;
			}
			
			private function toggleFullScreen(e:Event):void
			{
				stage.displayState = (stage.displayState == flash.display.StageDisplayState.NORMAL)
									 ? flash.display.StageDisplayState.FULL_SCREEN_INTERACTIVE
									 : flash.display.StageDisplayState.NORMAL;
			}
				
			private function initMenu():void 
			{
				var menu:NativeMenu = new NativeMenu();
				
				menu.addItem(createMenuItem("フルスクリーン(&F)", toggleFullScreen, function(e:Event):void {
					e.target.checked = (stage.displayState == flash.display.StageDisplayState.FULL_SCREEN_INTERACTIVE);
				}));
				menu.addItem(createMenuItem("最前面固定(&T)", function(e:Event):void {
					stage.nativeWindow.alwaysInFront = !stage.nativeWindow.alwaysInFront;
				}, function(e:Event):void {
					e.target.checked = stage.nativeWindow.alwaysInFront;
				}));
				menuTarget.contextMenu = menu;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:VBox width="100%" height="100%" id="menuTarget">
		<mx:TextInput id="address" text="" width="100%" visible="false"/>
		<s:VideoDisplay id="video" width="100%" height="100%"/>
	</mx:VBox>
	
</s:WindowedApplication>